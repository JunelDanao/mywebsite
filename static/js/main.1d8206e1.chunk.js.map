{"version":3,"sources":["component/homePage/homePageComponent.tsx","component/aboutMe/aboutComponent.tsx","component/contact/contactComponent.tsx","component/pageRoute/page.tsx","component/drawer/drawerComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HomePageComponent","style","width","margin","className","col","src","alt","href","target","aria-hidden","aboutComponent","ContactComponent","pageComponent","path","component","AboutPageComponent","ContactPageComponent","DrawerComponent","title","scroll","to","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6PA2CeA,EAxCW,WACtB,OACI,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAChC,kBAAC,OAAD,CAAMC,UAAU,YAChB,kBAAC,OAAD,CAAMC,IAAK,IACX,yBAAKC,IAAI,oCACLC,IAAI,SACJH,UAAU,eAEV,yBAAKA,UAAU,eACX,wBAAIA,UAAU,aAAd,SACS,0BAAMA,UAAU,cAAhB,WACT,wBAAIA,UAAU,UAAd,iBAGA,6BAEJ,yBAAKA,UAAU,gBACX,uBAAGI,KAAK,wCAAwCC,OAAO,UACnD,uBAAGL,UAAU,wBAAwBM,cAAY,UAErD,uBAAGF,KAAK,oCAAoCC,OAAO,UAC/C,uBAAGL,UAAU,sBAAsBM,cAAY,UAEnD,uBAAGF,KAAK,qCAAqCC,OAAO,UAChD,uBAAGL,UAAU,kBAAkBM,cAAY,UAE/C,uBAAGF,KAAK,mCAAmCC,OAAO,UAC9C,uBAAGL,UAAU,gBAAgBM,cAAY,gBCrBlDC,EARQ,WACnB,OACG,6BACI,4CCUIC,EAZU,WACrB,OACA,yBAAKR,UAAU,gBACX,kBAAC,OAAD,CAAMA,UAAU,gBACZ,kBAAC,OAAD,CAAMC,IAAK,IACX,kBAAC,OAAD,CAAMA,IAAK,OCURQ,EAZO,WAClB,OAEE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWf,IAC/B,kBAAC,IAAD,CAAOc,KAAK,SAASC,UAAWC,IAChC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWE,M,OCwB7BC,EA9BS,WACpB,OACI,yBAAKd,UAAU,oBACnB,kBAAC,SAAD,KACI,kBAAC,SAAD,CAAQA,UAAU,eAAee,MAAM,QAAQC,QAAM,GACjD,kBAAC,aAAD,KACA,kBAAC,IAAD,CAAMC,GAAG,SAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGJ,kBAAC,SAAD,CAAQF,MAAM,SACV,kBAAC,aAAD,KACA,kBAAC,IAAD,CAAME,GAAG,SAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGJ,kBAAC,UAAD,KACI,yBAAKjB,UAAU,iBACf,kBAAC,EAAD,UCbGkB,EARO,WACpB,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,QCIcmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCTNC,IAASC,OACT,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEEC,SAASC,eAAe,SD4HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1d8206e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nconst HomePageComponent = () => {\r\n    return (\r\n        <div style={{width: '100%', margin: 'auto'}}>\r\n            <Grid className=\"homepage\">\r\n            <Cell col={12}>\r\n            <img src=\"https://i.ibb.co/F4w9PcX/pics.jpg\"\r\n                alt=\"avatar\"\r\n                className=\"avatar-img\"\r\n                />\r\n                <div className=\"banner-text\">\r\n                    <h1 className=\"user-name\">\r\n                       Junel <span className=\"first-name\"> Danao</span></h1>\r\n                    <h2 className=\"status\">\r\n                        Web Developer\r\n                    </h2>\r\n                    <hr/>\r\n\r\n                <div className=\"social-links\">\r\n                    <a href=\"https://www.facebook.com/jhonez.danao\" target=\"_blank\">\r\n                        <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\r\n                    </a>\r\n                    <a href=\"https://www.github.com/juneldanao\" target=\"_blank\">\r\n                        <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                    </a>\r\n                    <a href=\"https://www.instagram.com/jhoneeez\" target=\"_blank\">\r\n                        <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\r\n                    </a>\r\n                    <a href=\"https://www.twitter.com/jhoneeez\" target=\"_blank\"> \r\n                        <i className=\"fa fa-twitter\" aria-hidden=\"true\" />\r\n                    </a>\r\n                </div>\r\n                </div>\r\n            </Cell>\r\n            </Grid>\r\n\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default HomePageComponent;\r\n","import React from 'react';\r\n\r\nconst aboutComponent = () => {\r\n    return (\r\n       <div>\r\n           <h1>About Page</h1>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default aboutComponent\r\n","import React from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nconst ContactComponent = () => {\r\n    return (\r\n    <div className=\"contact-body\">\r\n        <Grid className=\"contact-grid\">\r\n            <Cell col={6}></Cell>\r\n            <Cell col={6}></Cell>\r\n        </Grid>\r\n       \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ContactComponent;\r\n","import React from 'react';\r\nimport {Route, Switch } from 'react-router-dom';\r\nimport HomePageComponent from '../homePage/homePageComponent';\r\nimport AboutPageComponent from '../aboutMe/aboutComponent';\r\nimport ContactPageComponent from '../contact/contactComponent';\r\n\r\nconst pageComponent = () => {\r\n    return (\r\n\r\n      <Switch>\r\n          <Route path=\"/home\" component={HomePageComponent}></Route>\r\n          <Route path=\"/about\" component={AboutPageComponent}></Route>\r\n          <Route path=\"/contact\" component={ContactPageComponent}></Route>\r\n      </Switch>\r\n\r\n    )\r\n}\r\n\r\nexport default pageComponent;\r\n","import React from 'react';\r\nimport { Layout, Header,Navigation, Drawer, Content, HeaderRow, Textfield } from 'react-mdl';\r\nimport PageRoute from '../pageRoute/page';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst DrawerComponent = () => {\r\n    return(\r\n        <div className=\"demo-big-content\">\r\n    <Layout>\r\n        <Header className=\"header-color\" title=\"Title\" scroll>\r\n            <Navigation>\r\n            <Link to=\"/home\">Home</Link>\r\n            <Link to=\"/about\">About Me</Link>\r\n            <Link to=\"/contact\">Contact</Link>\r\n            </Navigation>\r\n        </Header>\r\n        <Drawer title=\"Title\">\r\n            <Navigation>\r\n            <Link to=\"/home\">Home</Link>\r\n            <Link to=\"/about\">About Me</Link>\r\n            <Link to=\"/contact\">Contact</Link>\r\n            </Navigation>\r\n        </Drawer>\r\n        <Content>\r\n            <div className=\"page-content\" />\r\n            <PageRoute />\r\n        </Content>\r\n    </Layout>\r\n</div>\r\n      \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DrawerComponent;","import React from 'react';\nimport './App.css';\nimport DrawerComponent from './component/drawer/drawerComponent';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <DrawerComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}